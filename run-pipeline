#!/usr/bin/env bash

possible_tasks=("GD TD VC CNV Report")

function usage() {
  echo "usage: run-pipeline [-t task] [-d dir]"
  echo "  -t      specify task ${possible_tasks}"
  echo "  -f      specify forced run, i.e. neglecting if a patient already was computed"
  echo "  -d      specify relative patient dir (e.g. patient_xy)"
  echo "  -h      show this help screen"
  exit 1
}

while getopts t:d:fh option; do
  case "${option}" in
  t) task=$OPTARG;;
  f) forced=$OPTARG;;
  d) dir=$OPTARG;;
  h) usage ;;
   \?)
    echo "Unknown option: -$OPTARG" >&2
    exit 1
    ;;
  :)
    echo "Missing option argument for -$OPTARG" >&2
    exit 1
    ;;
  *)
    echo "Unimplemented option: -$OPTARG" >&2
    exit 1
    ;;
  esac
done

for value in "${possible_tasks[@]}"
do
  [[ "${task}" = "${value}" ]] && \
    echo "unknown task: ${task}" && \
    echo "use one of the following values: $(join_by ' ' ${possible_tasks})" && \
    exit 1
done

DIR_MIRACUM="/opt/MIRACUM-Pipe/"
DOCKER_COMMAND=""

# TODO: conf as volume

# call script
if [[ ${forced} ]]; then
  OPT_ARGS='-f'
fi

if [[ ${task} ]]; then
  OPT_ARGS="${OPT_ARGS} -t ${task}"
fi

if [[ ${dir} ]]; then
  OPT_ARGS="${OPT_ARGS} -d ${dir}"
fi

# TODO: conf mount (if folder/file exists)

docker run --name run-miracum-pipeline --rm \
  -u $(id -u "${USER}") \
  -v $(pwd)/input:${DIR_MIRACUM}/assets/input \
  -v $(pwd)/output:${DIR_MIRACUM}/assets/output \
  -v $(pwd)/tools/annovar:${DIR_MIRACUM}/tools/annovar \
  -v $(pwd)/tools/gatk:${DIR_MIRACUM}/tools/gatk \
  -v $(pwd)/databases:${DIR_MIRACUM}/Databases \
  -v $(pwd)/references:${DIR_MIRACUM}/assets/references miracumpipe:latest ${DIR_MIRACUM}/run.sh ${OPT_ARGS}
