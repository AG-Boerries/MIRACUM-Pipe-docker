#!/usr/bin/env bash

readonly VALID_TASKS=("GD TD VC CNV Report")

function usage() {
  echo "usage: run-pipeline [-t task] [-d dir]"
  echo "  -t      specify task ${VALID_TASKS}"
  echo "  -f      specify forced run, i.e. neglecting if a patient already was computed"
  echo "  -d      specify relative patient dir (e.g. patient_xy)"
  echo "  -h      show this help screen"
  exit 1
}

while getopts t:d:fh option; do
  case "${option}" in
  t) readonly PARAM_TASK=$OPTARG;;
  f) readonly PARAM_FORCED=$OPTARG;;
  d) readonly PARAM_DIR_PATIENT=$OPTARG;;
  h) usage ;;
   \?)
    echo "Unknown option: -$OPTARG" >&2
    exit 1
    ;;
  :)
    echo "Missing option argument for -$OPTARG" >&2
    exit 1
    ;;
  *)
    echo "Unimplemented option: -$OPTARG" >&2
    exit 1
    ;;
  esac
done

for value in "${VALID_TASKS[@]}"
do
  [[ "${PARAM_TASK}" = "${value}" ]] && \
    echo "unknown task: ${PARAM_TASK}" && \
    echo "use one of the following values: $(join_by ' ' ${VALID_TASKS})" && \
    exit 1
done

readonly DIR_MIRACUM="/opt/MIRACUM-Pipe"

# TODO: conf as volume
if [[ -d $(pwd)/conf ]]; then
  readonly VOLUME_CONF="-v $(pwd)/conf:${DIR_MIRACUM}/conf"
fi

# call script
if [[ ${PARAM_FORCED} ]]; then
  opt_args='-f'
fi

if [[ ${PARAM_TASK} ]]; then
  opt_args="${opt_args} -t ${PARAM_TASK}"
fi

if [[ ${PARAM_DIR_PATIENT} ]]; then
  opt_args="${opt_args} -d ${PARAM_DIR_PATIENT}"
fi

# TODO: conf mount (if folder/file exists)
echo "running ${DIR_MIRACUM}/run.sh ${opt_args} inside docker image miracumpipe:latest"
echo "---"
docker run -it --name run-miracum-pipeline --rm \
  --tmpfs /tmp:exec "${VOLUME_CONF}" \
  -v "$(pwd)"/input:"${DIR_MIRACUM}"/assets/input \
  -v "$(pwd)"/output:"${DIR_MIRACUM}"/assets/output \
  -v "$(pwd)"/tools/annovar:"${DIR_MIRACUM}"/tools/annovar \
  -v "$(pwd)"/tools/gatk:"${DIR_MIRACUM}"/tools/gatk \
  -v "$(pwd)"/databases:"${DIR_MIRACUM}"/Databases \
  -v "$(pwd)"/references:"${DIR_MIRACUM}"/assets/references miracumpipe:latest "${DIR_MIRACUM}"/run.sh "${opt_args}"